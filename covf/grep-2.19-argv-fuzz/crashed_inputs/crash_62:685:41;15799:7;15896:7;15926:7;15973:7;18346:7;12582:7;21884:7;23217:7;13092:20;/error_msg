asan:
+ timeout -k 0.5 0.5 /workspace/fuzzing-deb-with-sanitizers/covf/grep-2.19-argv-fuzz/bins/reduced.asan.out
=================================================================
==4185962==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7f6f96900240 at pc 0x555972468e6b bp 0x7fff5c07f890 sp 0x7fff5c07f888
READ of size 4 at 0x7f6f96900240 thread T0
    #0 0x555972468e6a in setbit /workspace/fuzzing-deb-with-sanitizers/covf/grep-2.19-argv-fuzz/./grep-2.19.c.reduced.c:13092:20
    #1 0x55597247c959 in parse_bracket_exp /workspace/fuzzing-deb-with-sanitizers/covf/grep-2.19-argv-fuzz/./grep-2.19.c.reduced.c:14415:15
    #2 0x555972469f9d in lex /workspace/fuzzing-deb-with-sanitizers/covf/grep-2.19-argv-fuzz/./grep-2.19.c.reduced.c:15227:21
    #3 0x55597247d45c in atom /workspace/fuzzing-deb-with-sanitizers/covf/grep-2.19-argv-fuzz/./grep-2.19.c.reduced.c:15685:41
    #4 0x55597247d0bc in closure /workspace/fuzzing-deb-with-sanitizers/covf/grep-2.19-argv-fuzz/./grep-2.19.c.reduced.c:15799:7
    #5 0x55597247d048 in branch /workspace/fuzzing-deb-with-sanitizers/covf/grep-2.19-argv-fuzz/./grep-2.19.c.reduced.c:15896:7
    #6 0x55597246a1b8 in regexp /workspace/fuzzing-deb-with-sanitizers/covf/grep-2.19-argv-fuzz/./grep-2.19.c.reduced.c:15926:7
    #7 0x555972469146 in dfaparse /workspace/fuzzing-deb-with-sanitizers/covf/grep-2.19-argv-fuzz/./grep-2.19.c.reduced.c:15973:7
    #8 0x555972466fa9 in dfacomp /workspace/fuzzing-deb-with-sanitizers/covf/grep-2.19-argv-fuzz/./grep-2.19.c.reduced.c:18346:7
    #9 0x555972466d6d in GEAcompile /workspace/fuzzing-deb-with-sanitizers/covf/grep-2.19-argv-fuzz/./grep-2.19.c.reduced.c:12582:7
    #10 0x55597247f6e1 in Gcompile /workspace/fuzzing-deb-with-sanitizers/covf/grep-2.19-argv-fuzz/./grep-2.19.c.reduced.c:21884:7
    #11 0x555972477e0c in main /workspace/fuzzing-deb-with-sanitizers/covf/grep-2.19-argv-fuzz/./grep-2.19.c.reduced.c:23217:7
    #12 0x7f6f98642d8f in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16
    #13 0x7f6f98642e3f in __libc_start_main csu/../csu/libc-start.c:392:3
    #14 0x55597239a494 in _start (/workspace/fuzzing-deb-with-sanitizers/covf/grep-2.19-argv-fuzz/bins/reduced.asan.out+0x22494) (BuildId: e028c855c27ba69fef775ae6593bf2debe924f1e)

Address 0x7f6f96900240 is located in stack of thread T0 at offset 64 in frame
    #0 0x55597247b4af in parse_bracket_exp /workspace/fuzzing-deb-with-sanitizers/covf/grep-2.19-argv-fuzz/./grep-2.19.c.reduced.c:13534

  This frame has 11 object(s):
    [32, 64) 'ccl' (line 13539) <== Memory access at offset 64 overflows this variable
    [96, 100) '_wc' (line 13554)
    [112, 116) '_wc___0' (line 13560)
    [128, 132) '_wc___1' (line 13566)
    [144, 177) 'str' (line 13570)
    [224, 228) '_wc___2' (line 13574)
    [240, 244) '_wc___3' (line 13581)
    [256, 260) '_wc___4' (line 13598)
    [272, 276) '_wc___6' (line 13610)
    [288, 292) '_wc___7' (line 13616)
    [304, 308) '_wc___9' (line 13641)
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /workspace/fuzzing-deb-with-sanitizers/covf/grep-2.19-argv-fuzz/./grep-2.19.c.reduced.c:13092:20 in setbit
Shadow bytes around the buggy address:
  0x0fee72d17ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0fee72d18000: f1 f1 f1 f1 04 f2 00 f2 f2 f2 00 f2 f2 f2 00 00
  0x0fee72d18010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0fee72d18020: f3 f3 f3 f3 f3 f3 f3 f3 00 00 00 00 00 00 00 00
  0x0fee72d18030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0fee72d18040: f1 f1 f1 f1 00 00 00 00[f2]f2 f2 f2 04 f2 04 f2
  0x0fee72d18050: 04 f2 00 00 00 00 01 f2 f2 f2 f2 f2 04 f2 04 f2
  0x0fee72d18060: 04 f2 04 f2 04 f2 04 f3 00 00 00 00 00 00 00 00
  0x0fee72d18070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0fee72d18080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0fee72d18090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==4185962==ABORTING
./verify.sh: line 110: 4185961 Aborted                 timeout -k 0.5 0.5 ${bin} < $input
